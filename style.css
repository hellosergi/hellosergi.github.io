import "splitting/dist/splitting.css";
import "splitting/dist/splitting-cells.css";

html {
  overflow: hidden;
}

body {
  background-color: #FFF;
  height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;

  font-family: Helvetica Neue;
  font-size: 3vh;
  letter-spacing: 0.02em;
  text-transform: uppercase;
  text-align: center;
  color: #52795A;
}

#grid {
  border: 3px solid #52795A;
  border-radius: 4vh;
  display: grid;
  grid-template-areas:
  "name name . asterisk asterisk asterisk"
  "name name . asterisk asterisk asterisk"
  "name name . asterisk asterisk asterisk"
  "name name . . . ."
  "name name . . . ."
  "surname surname empty instagram telegram cv";
  grid-template-rows: 8vh 8vh 8vh 8vh 8vh 8vh;
  grid-template-columns: 8vh 8vh 8vh 8vh 8vh 8vh;
  grid-gap: 1px;
  overflow: hidden;
}

#grid > * {
  /* background-color: gold; */
  display: flex;
  align-items: center;
  justify-content: center;
}

.name {
  grid-area: name;
  font-size: 13vh;
  letter-spacing: -0.02em;
  text-align: left;
}

.name-text {
  transform: rotate(-90deg);
}

.surname {
  grid-area: surname;
}

.curve {
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
}

#asterisk {
  grid-area: asterisk;
  font-family: Georgia;
  font-weight: normal;
  font-size: 50vh;
  line-height: 50%;
  bottom: 0;
  text-transform: uppercase;
  color: #52795A;
  z-index: -1;
  /* overflow: hidden; */
}

.asterisk-symbol {
  position: relative;
  top: 9.5vh;
}

.instagram {
  grid-area: instagram;
}

.telegram {
  grid-area: telegram;
}

.cv {
  grid-area: cv;
}

a {
  color: #52795A;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
}

#js {
  display: none;
}


#curved {
  position: absolute;
  /* width: 100px;
  height: 100px; */
  /* position: fixed; */
  /* top: 30vh;
  left: 30vh; */
  font-family: Helvetica Neue;
  font-size: 3vh;
	text-transform: uppercase;
	color: #52795A;
  animation-name: spin;
  animation-duration: 15000ms;
  animation-iteration-count: infinite;
  animation-timing-function: linear;
}

.char {
  --units: 1;
  --l: calc(var(--char-total));
  --rotationUnit: calc((1turn / var(--l)) * var(--char-index, 1));
  transform: rotate(var(--rotationUnit));
  transform-origin: center;
  display: block !important;
  position: absolute !important;
  width: 60vh;
  height: 60vh;
  top: -30vh;
  left: -30vh;
  text-align: center;
}

@keyframes spin {
        from {
            transform: rotate(0deg);
        } to {
            transform: rotate(360deg);
        }
    }
